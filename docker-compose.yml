version: "2.4"

services:
  web:
    depends_on:
        - haproxy
    environment:
        - WEB_PORT=3000
    image: myapp:db
    ports:
        - 3000:3000
    restart: always
    networks:
        - db-nw

  postgres0:
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 30s
        timeout: 5s
        retries: 3
    image: spilo:latest
    networks:
        - db-nw
    ports: 
        - 5432:5432
        - 8008:8008
    volumes:
        - ./run0:/etc/service/etcd/run
        - ./spilo0:/home/postgres/pgdata/
        - ./etcd0:/tmp
        - ./patroni/spilo0.yml:/home/postgres/postgres.yml
    restart: always

  postgres1:
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 30s
        timeout: 5s
        retries: 3
    image: spilo:latest
    networks:
        - db-nw
    depends_on:
        - postgres0
    ports: 
        - 5433:5432
        - 8009:8008
    volumes:
        - ./run1:/etc/service/etcd/run
        - ./spilo1:/home/postgres/pgdata/
        - ./etcd1:/tmp
        - ./patroni/spilo1.yml:/home/postgres/postgres.yml
    restart: always

  postgres2:
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 30s
        timeout: 5s
        retries: 3
    image: spilo:latest
    networks:
        - db-nw
    depends_on:
        - postgres0
        - postgres1
    ports: 
        - 5434:5432
        - 8010:8008
    volumes:
        - ./run2:/etc/service/etcd/run
        - ./spilo2:/home/postgres/pgdata/
        - ./etcd2:/tmp
        - ./patroni/spilo2.yml:/home/postgres/postgres.yml
    restart: always

  haproxy:
    command: haproxy -f /usr/local/etc/haproxy.cfg
    image: haproxy:latest
    networks:
        - db-nw
    depends_on:
        - postgres0
        - postgres1
        - postgres2
    ports:
        - 5000:5000
        - 32700:32700
    volumes:
        - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy.cfg
    restart: always

networks:
    db-nw:
        driver: bridge
